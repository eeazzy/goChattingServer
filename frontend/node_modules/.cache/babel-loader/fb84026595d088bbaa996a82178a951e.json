{"ast":null,"code":"var _jsxFileName = \"/Users/kimhyeonseo/Desktop/inflearn/golang_chat/frontend/src/components/MakeNewRoom.jsx\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { host } from \"../utils/APIRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MakeNewRoom(_ref) {\n  let {\n    setChattingList\n  } = _ref;\n\n  const generateRandomRoomName = () => {\n    const adjectives = [\"Happy\", \"Sunny\", \"Cheerful\", \"Bright\", \"Colorful\"];\n    const nouns = [\"Chat\", \"Room\", \"Conversation\", \"Exchange\", \"Dialogue\"];\n    const randomAdjective = adjectives[Math.floor(Math.random() * adjectives.length)];\n    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];\n    return `${randomAdjective} ${randomNoun}`;\n  };\n\n  const handleClick = async () => {\n    const name = generateRandomRoomName();\n    alert(name + \" will be created\");\n    const res = await axios.post(host + \"/make-room\", {\n      Name: name\n    });\n\n    if (res.status !== 200) {\n      alert(\"Failed to create new room\");\n    } else {\n      const list = await axios.get(host + \"/room-list\");\n      setChattingList(list.data.result);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"New Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = MakeNewRoom;\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  background-color: #9a86f3;\n  border: none;\n  cursor: pointer;\n  svg {\n    font-size: 1.3rem;\n    color: #ebe7ff;\n  }\n`;\n_c2 = Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MakeNewRoom\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/Users/kimhyeonseo/Desktop/inflearn/golang_chat/frontend/src/components/MakeNewRoom.jsx"],"names":["axios","React","styled","host","MakeNewRoom","setChattingList","generateRandomRoomName","adjectives","nouns","randomAdjective","Math","floor","random","length","randomNoun","handleClick","name","alert","res","post","Name","status","list","get","data","result","Button","button"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,eAAe,SAASC,WAAT,OAA0C;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;;AACvD,QAAMC,sBAAsB,GAAG,MAAM;AACnC,UAAMC,UAAU,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,UAAnB,EAA+B,QAA/B,EAAyC,UAAzC,CAAnB;AACA,UAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,cAAjB,EAAiC,UAAjC,EAA6C,UAA7C,CAAd;AACA,UAAMC,eAAe,GACnBF,UAAU,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,UAAU,CAACM,MAAtC,CAAD,CADZ;AAEA,UAAMC,UAAU,GAAGN,KAAK,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,KAAK,CAACK,MAAjC,CAAD,CAAxB;AACA,WAAQ,GAAEJ,eAAgB,IAAGK,UAAW,EAAxC;AACD,GAPD;;AASA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,IAAI,GAAGV,sBAAsB,EAAnC;AACAW,IAAAA,KAAK,CAACD,IAAI,GAAG,kBAAR,CAAL;AACA,UAAME,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAWhB,IAAI,GAAG,YAAlB,EAAgC;AAChDiB,MAAAA,IAAI,EAAEJ;AAD0C,KAAhC,CAAlB;;AAIA,QAAIE,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtBJ,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACD,KAFD,MAEO;AACL,YAAMK,IAAI,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAUpB,IAAI,GAAG,YAAjB,CAAnB;AACAE,MAAAA,eAAe,CAACiB,IAAI,CAACE,IAAL,CAAUC,MAAX,CAAf;AACD;AACF,GAbD;;AAeA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEV,WAAjB;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KA9BuBX,W;AAgCxB,MAAMsB,MAAM,GAAGxB,MAAM,CAACyB,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMD,M","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { host } from \"../utils/APIRoutes\";\n\nexport default function MakeNewRoom({ setChattingList }) {\n  const generateRandomRoomName = () => {\n    const adjectives = [\"Happy\", \"Sunny\", \"Cheerful\", \"Bright\", \"Colorful\"];\n    const nouns = [\"Chat\", \"Room\", \"Conversation\", \"Exchange\", \"Dialogue\"];\n    const randomAdjective =\n      adjectives[Math.floor(Math.random() * adjectives.length)];\n    const randomNoun = nouns[Math.floor(Math.random() * nouns.length)];\n    return `${randomAdjective} ${randomNoun}`;\n  };\n\n  const handleClick = async () => {\n    const name = generateRandomRoomName();\n    alert(name + \" will be created\");\n    const res = await axios.post(host + \"/make-room\", {\n      Name: name,\n    });\n\n    if (res.status !== 200) {\n      alert(\"Failed to create new room\");\n    } else {\n      const list = await axios.get(host + \"/room-list\");\n      setChattingList(list.data.result);\n    }\n  };\n\n  return (\n    <Button onClick={handleClick}>\n      <span>New Room</span>\n    </Button>\n  );\n}\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  background-color: #9a86f3;\n  border: none;\n  cursor: pointer;\n  svg {\n    font-size: 1.3rem;\n    color: #ebe7ff;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}