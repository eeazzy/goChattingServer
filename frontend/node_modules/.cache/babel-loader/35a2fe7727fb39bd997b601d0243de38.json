{"ast":null,"code":"var _jsxFileName = \"/Users/kimhyeonseo/Desktop/inflearn/golang_chat/frontend/src/components/ChatInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { IoMdSend } from \"react-icons/io\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatInput(_ref) {\n  _s();\n\n  let {\n    handleSendMsg\n  } = _ref;\n  const [msg, setMsg] = useState(\"\");\n\n  const sendChat = event => {\n    event.preventDefault();\n\n    if (msg.length > 0) {\n      handleSendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emoji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-container\",\n      onSubmit: event => sendChat(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"type your message here\",\n        onChange: e => setMsg(e.target.value),\n        value: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(IoMdSend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatInput, \"wu2AL+BGTOpSyXjhnKep6uRDvi4=\");\n\n_c = ChatInput;\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  background-color: #080420;\n  padding: 0 2rem;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: white;\n    gap: 1rem;\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 1.5rem;\n        color: #ffff00c8;\n        cursor: pointer;\n      }\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n        background-color: #080420;\n        box-shadow: 0 5px 10px #9a86f3;\n        border-color: #9a86f3;\n        .emoji-scroll-wrapper::-webkit-scrollbar {\n          background-color: #080420;\n          width: 5px;\n          &-thumb {\n            background-color: #9a86f3;\n          }\n        }\n        .emoji-categories {\n          button {\n            filter: contrast(0);\n          }\n        }\n        .emoji-search {\n          background-color: transparent;\n          border-color: #9a86f3;\n        }\n        .emoji-group:before {\n          background-color: #080420;\n        }\n      }\n    }\n  }\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    background-color: #ffffff34;\n    input {\n      width: 90%;\n      height: 60%;\n      background-color: transparent;\n      color: white;\n      border: none;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n\n      &::selection {\n        background-color: #9a86f3;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #9a86f3;\n      border: none;\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatInput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/Users/kimhyeonseo/Desktop/inflearn/golang_chat/frontend/src/components/ChatInput.jsx"],"names":["React","useState","BsEmojiSmileFill","IoMdSend","styled","Picker","ChatInput","handleSendMsg","msg","setMsg","sendChat","event","preventDefault","length","e","target","value","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,eAAe,SAASC,SAAT,OAAsC;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACnD,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMS,QAAQ,GAAIC,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,GAAG,CAACK,MAAJ,GAAa,CAAjB,EAAoB;AAClBN,MAAAA,aAAa,CAACC,GAAD,CAAb;AACAC,MAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,GAND;;AAQA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,QAAQ,EAAGE,KAAD,IAAWD,QAAQ,CAACC,KAAD,CAA/D;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,QAAQ,EAAGG,CAAD,IAAOL,MAAM,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAHzB;AAIE,QAAA,KAAK,EAAER;AAJT;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA7BuBF,S;;KAAAA,S;AA+BxB,MAAMW,SAAS,GAAGb,MAAM,CAACc,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7FA;MAAMD,S","sourcesContent":["import React, { useState } from \"react\";\nimport { BsEmojiSmileFill } from \"react-icons/bs\";\nimport { IoMdSend } from \"react-icons/io\";\nimport styled from \"styled-components\";\nimport Picker from \"emoji-picker-react\";\n\nexport default function ChatInput({ handleSendMsg }) {\n  const [msg, setMsg] = useState(\"\");\n\n  const sendChat = (event) => {\n    event.preventDefault();\n    if (msg.length > 0) {\n      handleSendMsg(msg);\n      setMsg(\"\");\n    }\n  };\n\n  return (\n    <Container>\n      <div className=\"button-container\">\n        <div className=\"emoji\"></div>\n      </div>\n      <form className=\"input-container\" onSubmit={(event) => sendChat(event)}>\n        <input\n          type=\"text\"\n          placeholder=\"type your message here\"\n          onChange={(e) => setMsg(e.target.value)}\n          value={msg}\n        />\n        <button type=\"submit\">\n          <IoMdSend />\n        </button>\n      </form>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: 5% 95%;\n  background-color: #080420;\n  padding: 0 2rem;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    padding: 0 1rem;\n    gap: 1rem;\n  }\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: white;\n    gap: 1rem;\n    .emoji {\n      position: relative;\n      svg {\n        font-size: 1.5rem;\n        color: #ffff00c8;\n        cursor: pointer;\n      }\n      .emoji-picker-react {\n        position: absolute;\n        top: -350px;\n        background-color: #080420;\n        box-shadow: 0 5px 10px #9a86f3;\n        border-color: #9a86f3;\n        .emoji-scroll-wrapper::-webkit-scrollbar {\n          background-color: #080420;\n          width: 5px;\n          &-thumb {\n            background-color: #9a86f3;\n          }\n        }\n        .emoji-categories {\n          button {\n            filter: contrast(0);\n          }\n        }\n        .emoji-search {\n          background-color: transparent;\n          border-color: #9a86f3;\n        }\n        .emoji-group:before {\n          background-color: #080420;\n        }\n      }\n    }\n  }\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 2rem;\n    background-color: #ffffff34;\n    input {\n      width: 90%;\n      height: 60%;\n      background-color: transparent;\n      color: white;\n      border: none;\n      padding-left: 1rem;\n      font-size: 1.2rem;\n\n      &::selection {\n        background-color: #9a86f3;\n      }\n      &:focus {\n        outline: none;\n      }\n    }\n    button {\n      padding: 0.3rem 2rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: #9a86f3;\n      border: none;\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\n        padding: 0.3rem 1rem;\n        svg {\n          font-size: 1rem;\n        }\n      }\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}