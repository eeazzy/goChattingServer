{"ast":null,"code":"var _jsxFileName = \"/Users/kimhyeonseo/Desktop/inflearn/golang_chat/frontend/src/pages/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useCookies } from \"react-cookie\";\nimport { isExistCookie } from \"../utils/CookieChecker\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\nimport { useGlobalData } from \"../context/context\";\nimport { socketHost, host } from \"../utils/APIRoutes\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n\n  const [cookies] = useCookies([\"auth\"]);\n  const storage = useGlobalData();\n  const navigate = useNavigate();\n  const [initLoading, setInitLoading] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n  useEffect(() => {\n    if (!isExistCookie(cookies)) {\n      navigate(\"/login\");\n    } else {\n      setUserId(cookies.auth);\n      setInitLoading(true);\n      storage.setUserName(cookies.auth);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Contacts, {\n          userName: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), !initLoading ? /*#__PURE__*/_jsxDEV(Welcome, {\n          userName: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ChatContainer, {\n          userName: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chat, \"/7DH/b1FmIoG6MMH5r/2gMbwkpo=\", false, function () {\n  return [useCookies, useGlobalData, useNavigate];\n});\n\n_c = Chat;\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/Users/kimhyeonseo/Desktop/inflearn/golang_chat/frontend/src/pages/Chat.jsx"],"names":["React","useEffect","useState","useNavigate","styled","useCookies","isExistCookie","ChatContainer","Contacts","Welcome","useGlobalData","socketHost","host","axios","Chat","cookies","storage","navigate","initLoading","setInitLoading","userId","setUserId","auth","setUserName","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,oBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,OAAD,IAAYV,UAAU,CAAC,CAAC,MAAD,CAAD,CAA5B;AAEA,QAAMW,OAAO,GAAGN,aAAa,EAA7B;AACA,QAAMO,QAAQ,GAAGd,WAAW,EAA5B;AAEA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,aAAa,CAACS,OAAD,CAAlB,EAA6B;AAC3BE,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,KAFD,MAEO;AACLI,MAAAA,SAAS,CAACN,OAAO,CAACO,IAAT,CAAT;AACAH,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAH,MAAAA,OAAO,CAACO,WAAR,CAAoBR,OAAO,CAACO,IAA5B;AACD;AACF,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,CAACF,WAAD,gBACC,QAAC,OAAD;AAAS,UAAA,QAAQ,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD;;GAjCuBN,I;UACJT,U,EAEFK,a,EACCP,W;;;KAJKW,I;AAmCxB,MAAMU,SAAS,GAAGpB,MAAM,CAACqB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAMD,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\n\nimport { useCookies } from \"react-cookie\";\nimport { isExistCookie } from \"../utils/CookieChecker\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport Contacts from \"../components/Contacts\";\nimport Welcome from \"../components/Welcome\";\nimport { useGlobalData } from \"../context/context\";\nimport { socketHost, host } from \"../utils/APIRoutes\";\nimport axios from \"axios\";\n\nexport default function Chat() {\n  const [cookies] = useCookies([\"auth\"]);\n\n  const storage = useGlobalData();\n  const navigate = useNavigate();\n\n  const [initLoading, setInitLoading] = useState(false);\n  const [userId, setUserId] = useState(\"\");\n\n  useEffect(() => {\n    if (!isExistCookie(cookies)) {\n      navigate(\"/login\");\n    } else {\n      setUserId(cookies.auth);\n      setInitLoading(true);\n      storage.setUserName(cookies.auth);\n    }\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <div className=\"container\">\n          <Contacts userName={userId} />\n          {!initLoading ? (\n            <Welcome userName={userId} />\n          ) : (\n            <ChatContainer userName={userId} />\n          )}\n        </div>\n      </Container>\n    </>\n  );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}